/**
 * @file
 * Positioning for a responsive layout.
 *
 * Define CSS classes to create a fluid grid layout with optional sidebars
 * depending on whether blocks are placed in the left or right sidebars.
 *
 * This layout uses the Zen Grids plugin for Compass: http://zengrids.com
 */

// We are going to create a fluid grid with 1, 3, or 5 columns and 20px gutters
// between columns (applied as 10px of left/right padding on each column).
$zen-column-count:  1;
$zen-gutter-width: 20px;

// If you need IE6/7 support for box-sizing: border-box (default), see _init.scss
//$zen-box-sizing: content-box;

// You can generate more efficient CSS if you manually apply the
// zen-grid-item-base mixin to all grid items from within a single ruleset.
$zen-auto-include-item-base: false;
// $zen-auto-include-flow-item-base: false;

// Suppress this section of CSS for RTL layouts since it contains no LTR-specific styles.
@if $zen-reverse-all-floats == false {

/**
 * Center the page.
 *
 * For screen sizes larger than 1200px, prevent excessively long lines of text
 * by setting a max-width.
 */
#page,
.region-bottom {
  margin-left: auto;
  margin-right: auto;
  max-width: 980px;
	padding: 20px 20px 0px 20px;
}

/* Apply the shared properties of grid items in a single, efficient ruleset. */
#header,
#content,
#navigation,
.region-sidebar-first,
.region-sidebar-second,
	.content_blocks ,
#footer {
  // See the note about $zen-auto-include-item-base above.
  //@include zen-grid-item-base();
}

/* Containers for grid items and flow items. */
#header,
#main,
#footer {
  @include zen-grid-container();
}

/* Navigation bar */
@media all and (min-width: 768px) {
  #main {
    /* Move all the children of #main down to make room. */
    padding-top: $nav-height;
    position: relative;
  }
  #navigation {
    /* Move the navbar up inside #main's padding. */
//    position: absolute;
//    top: 0;
   height: $nav-height;
    width: $zen-grid-width;
  }
}

} // End of @if $zen-reverse-all-floats == true


/**
 * Use 3 grid columns for smaller screens.
 */
@media all and (min-width: 600px) {
	.one-sidebar,
	.two-sidebars {
		#content {
			float: left;
			width: 60%;
			margin-left: 0%;
			margin-right: -60%;
		}
		aside.sidebar {
			float: left;
			width: 38%;
			margin-left: 62%;
			margin-right: -100%;
		}
	}
//	.no-sidebars.not-front  #content {
//		width: 80%;
//		margin-right: 20%
//	}
}
@media all and (min-width: 768px) {
	.one-sidebar,
	.two-sidebars {
		#content {
			float: left;
			width: 66%;
			margin-left: 0%;
			margin-right: -66%;
		}
		aside.sidebar {
			float: left;
			width: 32%;
			margin-left: 68%;
			margin-right: -100%;
		}
	}
	.no-sidebars.not-front:not(.page-user)  #content {
		width: 80%;
		margin-right: 20%
	}
}

@media all and (max-width: 600px) {
	aside.sidebar,
	#content {
		margin-bottom: 20px
	}
}